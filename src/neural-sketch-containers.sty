\ExplSyntaxOn
%---------------------------------------------
% 1) Minimal: We'll define "container" keys,
%    but basically we just forward them to nskGroup keys.
%---------------------------------------------

% 1) Declare your custom layers
\pgfdeclarelayer{background}
\pgfdeclarelayer{foreground}

% 2) Set the order in which layers are drawn
%    (lowest -> highest)
\pgfsetlayers{background,main,foreground}

\tl_new:N \l_nsk_container_border_type_tl
\tl_new:N \l_nsk_container_border_color_tl
\tl_new:N \l_nsk_container_fill_tl


\prop_new:N \l_nsk_container_unknown_prop

\keys_define:nn {nsk / container}
{
	% Let the user specify fill, border-type, border-color if desired
	border-type .choice:,
	border-type/solid .code:n = \tl_set:Nn \l_nsk_container_border_type_tl {solid},
	border-type/dashed .code:n = \tl_set:Nn \l_nsk_container_border_type_tl {dashed},
	border-type .initial:n = {solid},

	border-color .tl_set:N = \l_nsk_container_border_color_tl,
	border-color .initial:n = {black},

	fill .tl_set:N = \l_nsk_container_fill_tl,
	fill .initial:n = {yellow!30},

	% (the rest: shift-x, shift-y, rotate, scale, group-style, bounds-name)
	% we won't define them here. We'll just pass them to \nskGroup as-is.
	unknown .code:n =
		{
			% Store unknown key in the property list, using the content of \l_keys_key_tl as a string
			\prop_put:Nnn \l_nsk_container_unknown_prop
			{ \tl_use:N \l_keys_key_tl }
			{ #1 }
		},
}



%---------------------------------------------
% 2) \nskContainer macro
%---------------------------------------------
\NewDocumentCommand \nskContainer { O{} +m }
{
	\group_begin:

	% (a) Clear the property list so it doesn't retain any old unknown keys
	\prop_clear_new:N \l_nsk_container_unknown_prop

	% (b) Parse recognized container keys + store unknown keys
	\keys_set:nn {nsk / container}{#1}

	% (c) Now call \nskGroup, passing the same #1 so that shift-x, rotate, etc.
	%     get recognized by nsk / group (or remain unknown for that domain).
	\nskGroup[#1]
	{
		% user content
		#2
	}

	% (d) Build an \nskBlock that fits the bounding box, plus any unknown keys
	%     stored in \l_nsk_container_unknown_prop. We'll do a small helper:
	\nsk__container_draw_block:

	\group_end:
}

% block expander -------------------------------------------
\cs_new_protected_nopar:Npn \nsk__expand_block_aux:n #1
{

	\begin{pgfonlayer}{background}
		\nskBlock [
			#1,
		]
	\end{pgfonlayer}

}

% Generate a "V V V V" variant so that we can pass token-list
% variables or dimension variables by *value*.
\cs_generate_variant:Nn \nsk__expand_block_aux:n { V }


% Generate a "V V V V" variant so that we can pass token-list
% variables or dimension variables by *value*.
\cs_generate_variant:Nn \nskBlockFromList:V { V }

\cs_new_protected_nopar:Npn \nsk__container_draw_block:
{
	% We'll build a token list of block options
	\tl_clear_new:N \l_tmpa_tl

	% put recognized container keys:
	\tl_put_right:No \l_tmpa_tl { type=rectangle, }
	\tl_put_right:No \l_tmpa_tl { fill=\l_nsk_container_fill_tl, }
	\tl_put_right:No \l_tmpa_tl { border-type=\l_nsk_container_border_type_tl, }
	\tl_put_right:No \l_tmpa_tl { border-color=\l_nsk_container_border_color_tl, }
	\tl_put_right:Nn \l_tmpa_tl
	{ tikz-opts={fit=(__nsk_container_bounds), inner\space sep=5pt}, }

	% now map over the unknown keys and append them as k=v pairs
	\prop_map_inline:Nn \l_nsk_container_unknown_prop
	{
		% #1 = the key, #2 = the value
		% We'll just do key=value,
		% but careful to insert commas in the final list
		\tl_put_right:No \l_tmpa_tl
		{
			\exp_not:o {##1} = \exp_not:o {##2},
		}
	}

	\nsk__expand_block_aux:V
	\l_tmpa_tl
}

\ExplSyntaxOff
