\ExplSyntaxOn

% ---------------------------------------------------------------------
% 1) Global Data Structures
% ---------------------------------------------------------------------
\tl_set:Nn \l_nsk_group_refnode_id_tl {__nsk_phantom_refnode}
\prop_new:N \l_nsk_group_unknown_prop

%-----------------------------------------------------------
% Group
% logical grouping
%-----------------------------------------------------------
\keys_define:nn {nsk / group}
{
	% bounds id ------------------------------------------------
	bounds-name .tl_set:N = \l_nsk_group_bounds_name_tl,
	bounds-name .initial:n = {__nsk_container_bounds},
	bounds-name .default:n = {__nsk_container_bounds},

	% natural positioning using positioning library
	pos .tl_set:N = \l_nsk_group_pos_tl,
	pos .initial:n = { },
	pos .default:n = { },

	shift-x .fp_set:N = \l_nsk_group_x_fp,
	shift-x .initial:n = {0},
	shift-x .default:n = {0},

	shift-y .fp_set:N = \l_nsk_group_y_fp,
	shift-y .initial:n = {0},
	shift-y .default:n = {0},

	rotate .fp_set:N = \l_nsk_group_rotate_fp,
	rotate .initial:n = {0},
	rotate .default:n = {0},

	scale .fp_set:N = \l_nsk_group_scale_fp,
	scale .initial:n = {1},
	scale .default:n = {1},

	% todo: this requires proper expansion
	% Optional "group-style" pass-through
	group-style .code:n =
		{
			\tl_set:Nn \l_nsk_group_extra_style_tl {#1}
		},
	group-style .initial:n = {},
	group-style .default:n = {},

	% forward unknown props to scope
	unknown .code:n =
		{
			% Store unknown key in the property list, using the content of \l_keys_key_tl as a string
			\prop_put:Nxx \l_nsk_group_unknown_prop
			{ \tl_use:N \l_keys_key_tl }
			{ #1 }
		},
}



%-----------------------------------------------------------------
% 3) Internal: build the final TikZ style as a comma-separated list
%    We'll store it in \l_tmpa_tl.
%-----------------------------------------------------------------
\cs_new_protected_nopar:Npn \nsk__build_group_style:
{
	% We'll create \l_tmpa_tl anew each time
	\tl_clear_new:N \l_tmpa_tl


	\tl_put_right:Nx \l_tmpa_tl
	{ local\space bounding\space box=\tl_use:N \l_nsk_group_bounds_name_tl, }


	% {x,y} pos ------------------------------------------------
	\tl_if_blank:VTF \l_nsk_group_pos_tl
	{
		% shift=(...)
		\tl_put_right:Nx \l_tmpa_tl
		{ shift={(\fp_use:N \l_nsk_group_x_fp,\fp_use:N \l_nsk_group_y_fp)}, }
	}
	{
		% -- pos is given => shift to reference phantom node
		\tl_put_right:Nx \l_tmpa_tl
		{ shift={(\tl_use:N \l_nsk_group_refnode_id_tl)}, }
	}

	% rotate=...
	\tl_put_right:Nx \l_tmpa_tl { rotate=\fp_use:N \l_nsk_group_rotate_fp, }

	% scale=...
	\tl_if_eq:nnF {\fp_to_decimal:N \l_nsk_group_scale_fp}{1.0}
	{ \tl_put_right:Nx \l_tmpa_tl { scale=\fp_use:N \l_nsk_group_scale_fp, } }

	% user-supplied style pass-through
	\tl_if_empty:VTF \l_nsk_group_extra_style_tl
	{ % do nothing if empty
	}
	{
		\tl_put_right:Nx \l_tmpa_tl { \l_nsk_group_extra_style_tl, }
	}

	% forward unknown keys as-is
	\prop_map_inline:Nn \l_nsk_group_unknown_prop
	{
		\tl_put_right:Nn \l_tmpa_tl
		{
			##1 = ##2,
		}
	}
}

%-----------------------------------------------------------------
% 4) Internal: draw the scope with the built style
%    #1 -> the style token list (passed by value)
%    #2 -> user content
%-----------------------------------------------------------------
\cs_new_protected_nopar:Npn \nsk__draw_group_scope_aux:nnn #1 #2 #3
{

	% phantom reference node for natural positioning
	\tl_if_blank:VF \l_nsk_group_pos_tl
	{
		\node[draw=red, #3] (\l_nsk_group_refnode_id_tl) {refnode};
	}


	\begin{scope}[#1]
		#2
	\end{scope}


	% FIX: delete me
	\tl_if_blank:VF \l_nsk_group_pos_tl
	{
		\fill[red, #3] (\l_nsk_group_refnode_id_tl) circle (2mm);
	}

}
\cs_generate_variant:Nn \nsk__draw_group_scope_aux:nnn { Vnx }
% ^ so we can pass \l_tmpa_tl by value (like :Vn)

%-----------------------------------------------------------------
% 5) Public macro \nskGroup
%-----------------------------------------------------------------
\NewDocumentCommand \nskGroup { O{} +m }
{
	\group_begin:

	% (a) Parse user-supplied keys
	\keys_set:nn {nsk / group} {#1}

	% (b) Build a comma-separated style in \l_tmpa_tl
	\nsk__build_group_style:

	% (c) Draw the scope, passing the style "by value"
	\nsk__draw_group_scope_aux:Vnx \l_tmpa_tl {#2} \l_nsk_group_pos_tl

	\group_end:
}

\ExplSyntaxOff
