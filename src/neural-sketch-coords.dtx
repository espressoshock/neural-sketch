% ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
%  neural-sketch-coords.dtx
% ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ <<<
% \iffalse
%<*driver>
\documentclass{ltxdoc}
\EnableCrossrefs
\CodelineIndex
\RecordChanges

\begin{document}
\DocInput{\jobname.dtx}
\end{document}
%</driver>
% \fi

\ProvidesFile{neural-sketch-coords.dtx}%
[2025/01/22 v0.1 neural-sketch-coords]

% \title{neural-sketch-coords.sty\\[1ex]
%        Simple coordinate system for neural-sketch}
% \author{Vincenzo Buono}
% \date{\today}
% \maketitle
%
% \StopEventually{}
%
% implementation ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ <<<
%<*package>
%    \begin{macrocode}
\ExplSyntaxOn

% ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
% Global counter -
% to track auto-increment counters
% ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ <<<
\int_new:N \g__nsk_coord_count_int


% ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
% Main nsk / coord Primitive
% ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ <<<
\keys_define:nn {nsk / coord}
{
	% ref-id ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ <<<
	id .tl_set:N = \l_nsk_coord_id_tl,
	id .initial:n = { },

	% coords ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ <<<
	x .fp_set:N = \l_nsk_coord_x_fp,
	x .initial:n = {0},
	y .fp_set:N = \l_nsk_coord_y_fp,
	y .initial:n = {0},

	% Let the user specify the "pos" usage from TikZ [right=1cm of something]:
	pos .tl_set:N = \l_nsk_coord_pos_tl,
	pos .initial:n = { },

	shift-x .dim_set:N = \l_nsk_coord_shift_x_dim,
	shift-x .initial:n = {0pt},
	shift-x .default:n = {0pt},

	shift-y .dim_set:N = \l_nsk_coord_shift_y_dim,
	shift-y .initial:n = {0pt},
	shift-y .default:n = {0pt},

	% markers ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ <<<
	marker .tl_set:N = \l_nsk_coord_marker_tl,
	marker .initial:n = {none},   % 'none' = disabled
	marker .default:n = {none},

	marker-color .tl_set:N = \l_nsk_coord_marker_color_tl,
	marker-color .initial:n = {red},
	marker-color .default:n = {red},

	marker-size .dim_set:N = \l_nsk_coord_marker_size_dim,
	marker-size .initial:n = {1mm},
	marker-size .default:n = {1mm},
}

% ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
% Markers
% ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ <<<
\cs_new_protected_nopar:Npn \nsk__draw_coord_marker:
{
	% If marker = none, do nothing
	% \tl_if_eq:VnT \l_nsk_coord_marker_tl { none } { \skip_0 }
	\tl_if_eq:VnF \l_nsk_coord_marker_tl { none }
	{
		% rely on the node's name \l_nsk_coord_id_tl
		\begin{scope}[shift=(\tl_use:N \l_nsk_coord_id_tl)]
			% color = <marker-color>
			% We'll define a local style
			\tikzset{nskcoordmarker/.style={
						draw=\l_nsk_coord_marker_color_tl,
						fill=\l_nsk_coord_marker_color_tl,
					}}

			\begin{scope}[nskcoordmarker]

				\str_case:VnF { \l_nsk_coord_marker_tl }
				{
					{o}{
							% Draw a circle with radius= marker-size/2 or marker-size?
							\draw circle[radius=\l_nsk_coord_marker_size_dim/2];
						}
						{x}{
							% interpret marker-size as the half-diagonal
							% so we draw lines from -(size)/2 to +(size)/2
							\fp_set:Nn \l_tmpa_fp { \dim_to_fp:n {\l_nsk_coord_marker_size_dim}/2 }
							\dim_set:Nn \l_tmpa_dim { \fp_to_dim:n {\l_tmpa_fp} }
							\draw
							(-\l_tmpa_dim, -\l_tmpa_dim) -- (\l_tmpa_dim, \l_tmpa_dim)
							(\l_tmpa_dim, -\l_tmpa_dim) -- (-\l_tmpa_dim, \l_tmpa_dim);
						}
				}
				{
					% fallback: user gave some unknown marker?
					% maybe draw a small diamond or do nothing
					\draw (0,0) node {\l_nsk_coord_marker_tl};
				}

			\end{scope}
		\end{scope}
	}
}

% ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
% Auto-generate an ID if user does not supply one
% ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ <<<
\cs_new_protected_nopar:Npn \nsk__coord_maybe_set_id:
{
	% If the user didnâ€™t supply an ID, automatically generate one
	\tl_if_blank:VTF \l_nsk_coord_id_tl
	{
		\int_gincr:N \g__nsk_coord_count_int
		\tl_set:cn {l__nsk_autocoord_\int_use:N \g__nsk_coord_count_int _tl}
		{ coord\int_use:N \g__nsk_coord_count_int }
		\tl_set_eq:NN \l_nsk_coord_id_tl { l__nsk_autocoord_\int_use:N \g__nsk_coord_count_int _tl }
	}
	{ }
}

% ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
% Phantom node Style builder
% ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ <<<
\cs_new_protected_nopar:Npn \nsk__build_coord_style:
{
	% Construct the node style for the ghost coordinate
	\tl_clear_new:N \l_tmpa_tl

	% name=<id>
	\tl_put_right:Nx \l_tmpa_tl { name=\l_nsk_coord_id_tl, }

	% If pos is blank, we place it at (x,y). Otherwise, we place it using [pos=...]
	\tl_if_blank:VTF \l_nsk_coord_pos_tl
	{
		\tl_put_right:Nx \l_tmpa_tl { at={(\fp_use:N \l_nsk_coord_x_fp,\fp_use:N \l_nsk_coord_y_fp)}, }
	}
	{
		\tl_put_right:Nx \l_tmpa_tl { \l_nsk_coord_pos_tl, }
	}

	% shift-x/y
	\tl_put_right:Nx \l_tmpa_tl
	{
		shift={ (\dim_use:N \l_nsk_coord_shift_x_dim, \dim_use:N \l_nsk_coord_shift_y_dim) },
	}

	% invisible node
	\tl_put_right:No \l_tmpa_tl { draw=none, fill=none, }
	\tl_show:N \l_tmpa_tl

	% Actually create the node
	\nsk__build_coord_style_aux:V \l_tmpa_tl

	% Now draw the marker if user wants it
	\nsk__draw_coord_marker:
}

% ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
% Phantom node Style builder [AUX]
% ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ <<<
\cs_new_protected_nopar:Npn \nsk__build_coord_style_aux:n #1
{
	\node[#1] {};
}

% ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
% Variant Generation :V
% ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ <<<
\cs_generate_variant:Nn \nsk__build_coord_style_aux:n { V }


% ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
% Public Interface
% - (user-facing)
% ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ <<<
\NewDocumentCommand \nskCoord { O{} }
{
	\group_begin:
	% 1) Parse the keys
	\keys_set:nn {nsk / coord} {#1}

	% 2) Possibly auto-generate an ID
	\nsk__coord_maybe_set_id:

	% 3) Build the node style & place the coordinate
	\nsk__build_coord_style:

	% Push the current block's ID into the global sequence
	\seq_gput_right:NV \g_nsk_block_id_history_seq \l_nsk_coord_id_tl

	\group_end:
}

\ExplSyntaxOff
%    \end{macrocode}
%</package>
\endinput
